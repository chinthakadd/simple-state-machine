mp.messaging.incoming.order-events.connector=smallrye-kafka
mp.messaging.incoming.order-events.topic=order-events
mp.messaging.incoming.order-events.value.deserializer=io.quarkus.kafka.client.serialization.ObjectMapperDeserializer
mp.messaging.incoming.order-events.value.deserializer.key=io.quarkus.kafka.client.serialization.ObjectMapperDeserializer
mp.messaging.incoming.order-events.value.deserializer.type=com.chinthakad.statemachine.example.OrderEventMessage

# Bloom Filter Configuration
bloom.filter.expected.insertions=1000000
bloom.filter.false.positive.rate=0.01
bloom.filter.backend.store=in-memory

# Cache Configuration
quarkus.cache.caffeine.bloom-filter-cache.maximum-size=10000
quarkus.cache.caffeine.bloom-filter-cache.expire-after-write=1h

# PostgreSQL Configuration (for future use)
# quarkus.datasource.db-kind=postgresql
# quarkus.datasource.username=postgres
# quarkus.datasource.password=postgres
# quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/bloomfilter
# quarkus.hibernate-orm.database.generation=drop-and-create
